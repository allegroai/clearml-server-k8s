apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: trains-agent
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: trains-server
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    allegro.ai/node-type: trains-agent
  name: trains-agent
  namespace: {{ .Values.trains.namespace }}
spec:
  replicas: {{ .Values.agent.numberOfTrainsAgents }}
  selector:
    matchLabels:
          app.kubernetes.io/name: trains-agent
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/part-of: trains-server
          app.kubernetes.io/managed-by: {{ .Release.Service }}
  minReadySeconds: 20
  progressDeadlineSeconds: 30
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
          app.kubernetes.io/name: trains-agent
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/part-of: trains-server
          app.kubernetes.io/managed-by: {{ .Release.Service }}
          helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
          allegro.ai/node-type: trains-agent
    spec:
      containers:
      - image: nvidia/cuda
        name: trains-agent
        securityContext:
          privileged: true
        resources:
          limits:
            nvidia.com/gpu:
              {{ .Values.agent.nvidiaGpusPerAgent }}
        volumeMounts:
          - name: dockersock
            mountPath: "/var/run/docker.sock"
          - name: agent-data
            mountPath: /root/.trains
        env:
          - name: TRAINS_API_HOST
            value: {{ .Values.agent.trainsApiHost}}
          - name: TRAINS_WEB_HOST
            value: {{ .Values.agent.trainsWebHost}}
          - name: TRAINS_FILES_HOST
            value: {{ .Values.agent.trainsFilesHost}}
          - name: TRAINS_AGENT_GIT_USER
            value: {{ .Values.agent.trainsGitUser}}
          - name: TRAINS_AGENT_GIT_PASS
            value: {{ .Values.agent.trainsGitPassword}}
          - name: TRAINS_API_ACCESS_KEY
            value: {{ .Values.agent.trainsAccessKey}}
          - name: TRAINS_API_SECRET_KEY
            value: {{ .Values.agent.trainsSecretKey}}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.agent.awsAccessKeyId}}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.agent.awsSecretAccessKey}}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.agent.awsDefaultRegion}}
          - name: AZURE_STORAGE_ACCOUNT
            value: {{ .Values.agent.azureStorageAccount}}
          - name: AZURE_STORAGE_KEY
            value: {{ .Values.agent.azureStorageKey}}
        command:
          - /bin/sh
          - -c
          - "apt-get update ;
             apt-get install -y curl python3-pip git;
             curl -sSL https://get.docker.com/ | sh ;
             python3 -m pip install -U pip ;
             python3 -m pip install trains-agent{{ .Values.agent.agentVersion}} ;
             TRAINS_AGENT_K8S_HOST_MOUNT=/root/.trains:/root/.trains trains-agent daemon"
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: agent-data
        hostPath:
          path: /root/.trains/
      restartPolicy: Always
